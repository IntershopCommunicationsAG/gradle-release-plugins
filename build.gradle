plugins {
    // project plugins
    id 'java-gradle-plugin'
    id 'groovy'
    // test coverage
    id 'jacoco'

    // ide plugin
    id 'idea'

    // artifact signing - necessary on Maven Central
    id 'signing'

    // intershop test plugin
    id 'com.intershop.gradle.test' version '2.2.0'

    // plugin for documentation
    id 'org.asciidoctor.convert' version '1.5.3'

    // intershop version plugin
    id 'com.intershop.gradle.scmversion' version '2.3.4'

    // plugin for publishing to Gradle Portal
    id 'com.gradle.plugin-publish' version '0.12.0'
}

scm {
    version {
        initialVersion = '1.0.0'
    }
}

group 'com.intershop.gradle.publish'
description 'Gradle publish plugins'
version = scm.version.version

// plugins should work with JDK 1.7 aslong
// older INTERSHOP version use this version of JDK
sourceCompatibility = 1.8
targetCompatibility = 1.8

// set correct project status
if (project.version.endsWith('-SNAPSHOT')) {
    status = 'snapshot'
}

test {
    // Gradle versions for test
    systemProperty 'intershop.gradle.versions', '2.11,3.4'
}

task copyAsciiDoc(type: Copy) {
    def outputDir = file("$buildDir/tmp/asciidoctorSrc")
    def inputFiles = fileTree(dir: rootDir, include: '**/*.asciidoc',  exclude: 'build/**')

    inputs.files inputFiles
    outputs.dir outputDir

    doFirst {
        outputDir.mkdirs()
    }

    from inputFiles
    into outputDir
}

asciidoctorj {
    noDefaultRepositories = true
}

asciidoctor {
    sourceDir "${buildDir}/tmp/asciidoctorSrc"
    sources {
        include 'README.asciidoc'
    }

    backends 'html5', 'docbook'
    options doctype : 'article',
            ruby    : 'erubis'
    attributes  'latestRevision'     : project.version,
            'toc':'left',
            'toclevels':'2',
            'source-highlighter' : 'coderay',
            'icons': 'font',
            'setanchors':'true',
            'idprefix':'asciidoc_',
            'idseparator':'-',
            'docinfo1':'true'
}

asciidoctor.dependsOn copyAsciiDoc
jar.dependsOn asciidoctor

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

task groovydocJar(type: Jar) {
    dependsOn groovydoc
    classifier = 'javadoc'
    from groovydoc.destinationDir
}

// additional sources artifact
task sourceJar(type: Jar) {
    from sourceSets.main.allSource
}

pluginBundle {
    website = "https://github.com/IntershopCommunicationsAG/${project.name}"
    vcsUrl = "https://github.com/IntershopCommunicationsAG/${project.name}"
    description = project.description
    tags = ['intershop', 'gradle', 'plugin', 'publish', 'release']

    plugins {
        escrowPlugin {
            id = 'com.intershop.gradle.escrow-plugin'
            displayName = 'Plugin for escrow package creation'
        }
        javadocPlugin {
            id = 'com.intershop.gradle.javadoc-configuration'
            displayName = 'Plugin with Intershop specific javadoc configuration'
        }
        javasourcePlugin {
            id = 'com.intershop.gradle.javasource-plugin'
            displayName = 'Plugin with Intershop specific javasource package configuration'
        }
        simplepublishPlugin {
            id = 'com.intershop.gradle.simplepublish-configuration'
            displayName = 'Plugin with simple publishing configuration'
        }
        artifactorypublishPlugin {
            id = 'com.intershop.gradle.artifactorypublish-configuration'
            displayName = 'Plugin with Intershop specific publishing configuration with Artifactory'
        }
        simpleartifactorypublishPlugin {
            id = 'com.intershop.gradle.simpleartifactorypublish-configuration'
            displayName = 'Plugin with Intershop specific simple publishing configuration with Artifactory'
        }
    }
}

dependencies {
    compile 'com.intershop.gradle.repoconfig:repoconfig-gradle-plugin:3.2.0'
    compile 'org.jfrog.buildinfo:build-info-extractor-gradle:4.4.13'
    compile 'com.intershop.gradle.buildinfo:buildinfo-gradle-plugin:2.4.0'

    testCompile('org.spockframework:spock-core:1.0-groovy-2.4'){
        exclude group: 'org.codehaus.groovy'
    }

    // mock webserver
    testCompile 'com.squareup.okhttp:okhttp:2.7.5'
    testCompile 'com.squareup.okhttp:mockwebserver:2.7.5'
}

repositories {
    jcenter()
    mavenCentral()
}
